plugins {
    id "com.github.hierynomus.license" version "0.15.0" apply false
    id "org.sonarqube" version "3.1.1"
    id "com.jfrog.bintray" version "1.8.5" apply false
}

sonarqube {
    properties {
        property "sonar.projectKey", "qaware_cloud-cost-fitness"
        property "sonar.organization", "qaware-github"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'groovy'
    apply plugin: 'jacoco'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.hierynomus.license'
    apply plugin: 'com.jfrog.bintray'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(11)
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
        testImplementation 'org.codehaus.groovy:groovy-all:2.5.4'

        testRuntimeOnly "net.bytebuddy:byte-buddy:1.10.10"
        testRuntimeOnly "org.objenesis:objenesis:3.1"
    }

    test {
        finalizedBy jacocoTestReport
    }

    jacoco {
        toolVersion = "0.8.6"
    }

    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }

    license {
        header = project.file('../HEADER')
        strictCheck = true
        includes(["**/*.java", "**/*.groovy"])
        mapping {
            java = 'SLASHSTAR_STYLE'
            groovy = 'SLASHSTAR_STYLE'
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/qaware/cloud-cost-fitness")
                credentials {
                    username = 'lreimer'
                    password = project.findProperty("gpr.token") ?: System.getenv("GPR_TOKEN")
                }
            }
        }
    }

    bintray {
        user = project.hasProperty('bintrayUsername') ? project.bintrayUsername : System.getenv('BINTRAY_USERNAME')
        key = project.hasProperty('bintrayApiKey') ? project.bintrayApiKey : System.getenv('BINTRAY_API_KEY')
        publications = ['library']
        dryRun = false
        publish = true
        pkg {
            repo = rootProject.bintrayRepo
            name = rootProject.name
            desc = rootProject.description
            licenses = ['Apache-2.0']
            labels = ['java', 'cloud', 'cost', 'devops', 'aws', 'gcp', 'azure']
            websiteUrl = rootProject.websiteUrl
            issueTrackerUrl = rootProject.issueTrackerUrl
            vcsUrl = rootProject.scmUrl
            publicDownloadNumbers = true
            version {
                name = rootProject.version
                desc = rootProject.description
                released = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZZ")
                vcsTag = "v${rootProject.version}"
            }
        }
    }
}
